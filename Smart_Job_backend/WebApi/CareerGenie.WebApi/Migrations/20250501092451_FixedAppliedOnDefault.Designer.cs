// <auto-generated />
using System;
using CareerGenie.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareerGenie.WebApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250501092451_FixedAppliedOnDefault")]
    partial class FixedAppliedOnDefault
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CareerGenie.Entities.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime(6)");

                    b.PrimitiveCollection<string>("SkillsRequired")
                        .HasColumnType("json");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Jobs", (string)null);
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.JobApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AppliedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<Guid>("JobId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("UserId");

                    b.ToTable("JobApplications", (string)null);
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.JobEmbedding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("JobId")
                        .HasColumnType("char(36)");

                    b.Property<string>("VectorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("JobEmbeddings", (string)null);
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.ResumeEmbedding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResumeProfileId")
                        .HasColumnType("char(36)");

                    b.Property<string>("VectorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ResumeProfileId")
                        .IsUnique();

                    b.ToTable("ResumeEmbeddings", (string)null);
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.ResumeProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Education")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Experience")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ResumeUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Skills")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ResumeProfiles", (string)null);
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.SkillMatch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("JobId")
                        .HasColumnType("char(36)");

                    b.Property<float>("MatchScore")
                        .HasColumnType("float");

                    b.Property<Guid>("ResumeProfileId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("ResumeProfileId");

                    b.ToTable("SkillMatches", (string)null);
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2025, 5, 1, 9, 24, 51, 301, DateTimeKind.Utc).AddTicks(6474));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.JobApplication", b =>
                {
                    b.HasOne("CareerGenie.Entities.Entities.Job", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerGenie.Entities.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.JobEmbedding", b =>
                {
                    b.HasOne("CareerGenie.Entities.Entities.Job", "Job")
                        .WithOne()
                        .HasForeignKey("CareerGenie.Entities.Entities.JobEmbedding", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.ResumeEmbedding", b =>
                {
                    b.HasOne("CareerGenie.Entities.Entities.ResumeProfile", "ResumeProfile")
                        .WithOne()
                        .HasForeignKey("CareerGenie.Entities.Entities.ResumeEmbedding", "ResumeProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResumeProfile");
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.ResumeProfile", b =>
                {
                    b.HasOne("CareerGenie.Entities.Entities.User", "User")
                        .WithOne("ResumeProfile")
                        .HasForeignKey("CareerGenie.Entities.Entities.ResumeProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.SkillMatch", b =>
                {
                    b.HasOne("CareerGenie.Entities.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerGenie.Entities.Entities.ResumeProfile", "ResumeProfile")
                        .WithMany()
                        .HasForeignKey("ResumeProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("ResumeProfile");
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.Job", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("CareerGenie.Entities.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ResumeProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
